diff --git a/libc/include/net/if_slip.h b/libc/include/net/if_slip.h
new file mode 100644
index 0000000..2144204
--- /dev/null
+++ b/libc/include/net/if_slip.h
@@ -0,0 +1,6 @@
+#ifndef _NET_IF_SLIP_H_
+#define _NET_IF_SLIP_H_
+
+#include <linux/if_slip.h>
+
+#endif /* _NET_IF_SLIP_H_ */
diff --git a/libc/kernel/common/linux/if_bonding.h b/libc/kernel/common/linux/if_bonding.h
new file mode 100644
index 0000000..6d587c7
--- /dev/null
+++ b/libc/kernel/common/linux/if_bonding.h
@@ -0,0 +1,77 @@
+/****************************************************************************
+ ****************************************************************************
+ ***
+ ***   This header was automatically generated from a Linux kernel header
+ ***   of the same name, to make information necessary for userspace to
+ ***   call into the kernel available to libc.  It contains only constants,
+ ***   structures, and macros generated from the original header, and thus,
+ ***   contains no copyrightable information.
+ ***
+ ****************************************************************************
+ ****************************************************************************/
+#ifndef _LINUX_IF_BONDING_H
+#define _LINUX_IF_BONDING_H
+
+#include <linux/if.h>
+#include <linux/types.h>
+#include <linux/if_ether.h>
+
+#define BOND_ABI_VERSION 2
+
+#define BOND_ENSLAVE_OLD (SIOCDEVPRIVATE)
+#define BOND_RELEASE_OLD (SIOCDEVPRIVATE + 1)
+#define BOND_SETHWADDR_OLD (SIOCDEVPRIVATE + 2)
+#define BOND_SLAVE_INFO_QUERY_OLD (SIOCDEVPRIVATE + 11)
+#define BOND_INFO_QUERY_OLD (SIOCDEVPRIVATE + 12)
+#define BOND_CHANGE_ACTIVE_OLD (SIOCDEVPRIVATE + 13)
+
+#define BOND_CHECK_MII_STATUS (SIOCGMIIPHY)
+
+#define BOND_MODE_ROUNDROBIN 0
+#define BOND_MODE_ACTIVEBACKUP 1
+#define BOND_MODE_XOR 2
+#define BOND_MODE_BROADCAST 3
+#define BOND_MODE_8023AD 4
+#define BOND_MODE_TLB 5
+#define BOND_MODE_ALB 6  
+
+#define BOND_LINK_UP 0  
+#define BOND_LINK_FAIL 1  
+#define BOND_LINK_DOWN 2  
+#define BOND_LINK_BACK 3  
+
+#define BOND_STATE_ACTIVE 0  
+#define BOND_STATE_BACKUP 1  
+
+#define BOND_DEFAULT_MAX_BONDS 1  
+
+#define BOND_DEFAULT_TX_QUEUES 16  
+
+#define BOND_XMIT_POLICY_LAYER2 0  
+#define BOND_XMIT_POLICY_LAYER34 1  
+#define BOND_XMIT_POLICY_LAYER23 2  
+
+typedef struct ifbond {
+ __s32 bond_mode;
+ __s32 num_slaves;
+ __s32 miimon;
+} ifbond;
+
+typedef struct ifslave {
+ __s32 slave_id;
+ char slave_name[IFNAMSIZ];
+ __s8 link;
+ __s8 state;
+ __u32 link_failure_count;
+} ifslave;
+
+struct ad_info {
+ __u16 aggregator_id;
+ __u16 ports;
+ __u16 actor_key;
+ __u16 partner_key;
+ __u8 partner_system[ETH_ALEN];
+};
+
+#endif
+
diff --git a/libc/kernel/common/linux/if_slip.h b/libc/kernel/common/linux/if_slip.h
new file mode 100644
index 0000000..ee07ac4
--- /dev/null
+++ b/libc/kernel/common/linux/if_slip.h
@@ -0,0 +1,29 @@
+/****************************************************************************
+ ****************************************************************************
+ ***
+ ***   This header was automatically generated from a Linux kernel header
+ ***   of the same name, to make information necessary for userspace to
+ ***   call into the kernel available to libc.  It contains only constants,
+ ***   structures, and macros generated from the original header, and thus,
+ ***   contains no copyrightable information.
+ ***
+ ****************************************************************************
+ ****************************************************************************/
+#ifndef __LINUX_SLIP_H
+#define __LINUX_SLIP_H
+
+#define SL_MODE_SLIP 0
+#define SL_MODE_CSLIP 1
+#define SL_MODE_KISS 4
+
+#define SL_OPT_SIXBIT 2
+#define SL_OPT_ADAPTIVE 8
+
+#define SIOCSKEEPALIVE (SIOCDEVPRIVATE)  
+#define SIOCGKEEPALIVE (SIOCDEVPRIVATE+1)  
+#define SIOCSOUTFILL (SIOCDEVPRIVATE+2)  
+#define SIOCGOUTFILL (SIOCDEVPRIVATE+3)  
+#define SIOCSLEASE (SIOCDEVPRIVATE+4)  
+#define SIOCGLEASE (SIOCDEVPRIVATE+5)  
+
+#endif
diff --git a/libc/kernel/common/linux/jffs2.h b/libc/kernel/common/linux/jffs2.h
new file mode 100644
index 0000000..5fa5063
--- /dev/null
+++ b/libc/kernel/common/linux/jffs2.h
@@ -0,0 +1,192 @@
+/****************************************************************************
+ ****************************************************************************
+ ***
+ ***   This header was automatically generated from a Linux kernel header
+ ***   of the same name, to make information necessary for userspace to
+ ***   call into the kernel available to libc.  It contains only constants,
+ ***   structures, and macros generated from the original header, and thus,
+ ***   contains no copyrightable information.
+ ***
+ ****************************************************************************
+ ****************************************************************************/
+#ifndef __LINUX_JFFS2_H__
+#define __LINUX_JFFS2_H__
+
+#include <linux/types.h>
+#include <linux/magic.h>
+
+#define JFFS2_OLD_MAGIC_BITMASK 0x1984
+#define JFFS2_MAGIC_BITMASK 0x1985
+#define KSAMTIB_CIGAM_2SFFJ 0x8519  
+#define JFFS2_EMPTY_BITMASK 0xffff
+#define JFFS2_DIRTY_BITMASK 0x0000
+
+#define JFFS2_SUM_MAGIC 0x02851885
+
+#define JFFS2_MAX_NAME_LEN 254
+
+#define JFFS2_MIN_DATA_LEN 128
+
+#define JFFS2_COMPR_NONE 0x00
+#define JFFS2_COMPR_ZERO 0x01
+#define JFFS2_COMPR_RTIME 0x02
+#define JFFS2_COMPR_RUBINMIPS 0x03
+#define JFFS2_COMPR_COPY 0x04
+#define JFFS2_COMPR_DYNRUBIN 0x05
+#define JFFS2_COMPR_ZLIB 0x06
+#define JFFS2_COMPR_LZO 0x07
+
+#define JFFS2_COMPAT_MASK 0xc000  
+#define JFFS2_NODE_ACCURATE 0x2000
+
+#define JFFS2_FEATURE_INCOMPAT 0xc000
+
+#define JFFS2_FEATURE_ROCOMPAT 0x8000
+
+#define JFFS2_FEATURE_RWCOMPAT_COPY 0x4000
+
+#define JFFS2_FEATURE_RWCOMPAT_DELETE 0x0000
+
+#define JFFS2_NODETYPE_DIRENT (JFFS2_FEATURE_INCOMPAT | JFFS2_NODE_ACCURATE | 1)
+#define JFFS2_NODETYPE_INODE (JFFS2_FEATURE_INCOMPAT | JFFS2_NODE_ACCURATE | 2)
+#define JFFS2_NODETYPE_CLEANMARKER (JFFS2_FEATURE_RWCOMPAT_DELETE | JFFS2_NODE_ACCURATE | 3)
+#define JFFS2_NODETYPE_PADDING (JFFS2_FEATURE_RWCOMPAT_DELETE | JFFS2_NODE_ACCURATE | 4)
+
+#define JFFS2_NODETYPE_SUMMARY (JFFS2_FEATURE_RWCOMPAT_DELETE | JFFS2_NODE_ACCURATE | 6)
+
+#define JFFS2_NODETYPE_XATTR (JFFS2_FEATURE_INCOMPAT | JFFS2_NODE_ACCURATE | 8)
+#define JFFS2_NODETYPE_XREF (JFFS2_FEATURE_INCOMPAT | JFFS2_NODE_ACCURATE | 9)
+
+#define JFFS2_XPREFIX_USER 1  
+#define JFFS2_XPREFIX_SECURITY 2  
+#define JFFS2_XPREFIX_ACL_ACCESS 3  
+#define JFFS2_XPREFIX_ACL_DEFAULT 4  
+#define JFFS2_XPREFIX_TRUSTED 5  
+
+#define JFFS2_ACL_VERSION 0x0001
+
+#define JFFS2_INO_FLAG_PREREAD 1  
+#define JFFS2_INO_FLAG_USERCOMPR 2  
+
+typedef struct {
+ __u32 v32;
+} __attribute__((packed)) jint32_t;
+
+typedef struct {
+ __u32 m;
+} __attribute__((packed)) jmode_t;
+
+typedef struct {
+ __u16 v16;
+} __attribute__((packed)) jint16_t;
+
+struct jffs2_unknown_node
+{
+
+ jint16_t magic;
+ jint16_t nodetype;
+ jint32_t totlen;
+ jint32_t hdr_crc;
+};
+
+struct jffs2_raw_dirent
+{
+ jint16_t magic;
+ jint16_t nodetype;
+ jint32_t totlen;
+ jint32_t hdr_crc;
+ jint32_t pino;
+ jint32_t version;
+ jint32_t ino;
+ jint32_t mctime;
+ __u8 nsize;
+ __u8 type;
+ __u8 unused[2];
+ jint32_t node_crc;
+ jint32_t name_crc;
+ __u8 name[0];
+};
+
+struct jffs2_raw_inode
+{
+ jint16_t magic;
+ jint16_t nodetype;
+ jint32_t totlen;
+ jint32_t hdr_crc;
+ jint32_t ino;
+ jint32_t version;
+ jmode_t mode;
+ jint16_t uid;
+ jint16_t gid;
+ jint32_t isize;
+ jint32_t atime;
+ jint32_t mtime;
+ jint32_t ctime;
+ jint32_t offset;
+ jint32_t csize;
+ jint32_t dsize;
+ __u8 compr;
+ __u8 usercompr;
+ jint16_t flags;
+ jint32_t data_crc;
+ jint32_t node_crc;
+ __u8 data[0];
+};
+
+struct jffs2_raw_xattr {
+ jint16_t magic;
+ jint16_t nodetype;
+ jint32_t totlen;
+ jint32_t hdr_crc;
+ jint32_t xid;
+ jint32_t version;
+ __u8 xprefix;
+ __u8 name_len;
+ jint16_t value_len;
+ jint32_t data_crc;
+ jint32_t node_crc;
+ __u8 data[0];
+} __attribute__((packed));
+
+struct jffs2_raw_xref
+{
+ jint16_t magic;
+ jint16_t nodetype;
+ jint32_t totlen;
+ jint32_t hdr_crc;
+ jint32_t ino;
+ jint32_t xid;
+ jint32_t xseqno;
+ jint32_t node_crc;
+} __attribute__((packed));
+
+struct jffs2_raw_summary
+{
+ jint16_t magic;
+ jint16_t nodetype;
+ jint32_t totlen;
+ jint32_t hdr_crc;
+ jint32_t sum_num;
+ jint32_t cln_mkr;
+ jint32_t padded;
+ jint32_t sum_crc;
+ jint32_t node_crc;
+ jint32_t sum[0];
+};
+
+union jffs2_node_union
+{
+ struct jffs2_raw_inode i;
+ struct jffs2_raw_dirent d;
+ struct jffs2_raw_xattr x;
+ struct jffs2_raw_xref r;
+ struct jffs2_raw_summary s;
+ struct jffs2_unknown_node u;
+};
+
+union jffs2_device_node {
+ jint16_t old_id;
+ jint32_t new_id;
+};
+
+#endif
diff --git a/libc/kernel/common/linux/mii.h b/libc/kernel/common/linux/mii.h
new file mode 100644
index 0000000..3890731
--- /dev/null
+++ b/libc/kernel/common/linux/mii.h
@@ -0,0 +1,140 @@
+/****************************************************************************
+ ****************************************************************************
+ ***
+ ***   This header was automatically generated from a Linux kernel header
+ ***   of the same name, to make information necessary for userspace to
+ ***   call into the kernel available to libc.  It contains only constants,
+ ***   structures, and macros generated from the original header, and thus,
+ ***   contains no copyrightable information.
+ ***
+ ****************************************************************************
+ ****************************************************************************/
+#ifndef __LINUX_MII_H__
+#define __LINUX_MII_H__
+
+#include <linux/types.h>
+
+#define MII_BMCR 0x00  
+#define MII_BMSR 0x01  
+#define MII_PHYSID1 0x02  
+#define MII_PHYSID2 0x03  
+#define MII_ADVERTISE 0x04  
+#define MII_LPA 0x05  
+#define MII_EXPANSION 0x06  
+#define MII_CTRL1000 0x09  
+#define MII_STAT1000 0x0a  
+#define MII_ESTATUS 0x0f  
+#define MII_DCOUNTER 0x12  
+#define MII_FCSCOUNTER 0x13  
+#define MII_NWAYTEST 0x14  
+#define MII_RERRCOUNTER 0x15  
+#define MII_SREVISION 0x16  
+#define MII_RESV1 0x17  
+#define MII_LBRERROR 0x18  
+#define MII_PHYADDR 0x19  
+#define MII_RESV2 0x1a  
+#define MII_TPISTATUS 0x1b  
+#define MII_NCONFIG 0x1c  
+
+#define BMCR_RESV 0x003f  
+#define BMCR_SPEED1000 0x0040  
+#define BMCR_CTST 0x0080  
+#define BMCR_FULLDPLX 0x0100  
+#define BMCR_ANRESTART 0x0200  
+#define BMCR_ISOLATE 0x0400  
+#define BMCR_PDOWN 0x0800  
+#define BMCR_ANENABLE 0x1000  
+#define BMCR_SPEED100 0x2000  
+#define BMCR_LOOPBACK 0x4000  
+#define BMCR_RESET 0x8000  
+
+#define BMSR_ERCAP 0x0001  
+#define BMSR_JCD 0x0002  
+#define BMSR_LSTATUS 0x0004  
+#define BMSR_ANEGCAPABLE 0x0008  
+#define BMSR_RFAULT 0x0010  
+#define BMSR_ANEGCOMPLETE 0x0020  
+#define BMSR_RESV 0x00c0  
+#define BMSR_ESTATEN 0x0100  
+#define BMSR_100HALF2 0x0200  
+#define BMSR_100FULL2 0x0400  
+#define BMSR_10HALF 0x0800  
+#define BMSR_10FULL 0x1000  
+#define BMSR_100HALF 0x2000  
+#define BMSR_100FULL 0x4000  
+#define BMSR_100BASE4 0x8000  
+
+#define ADVERTISE_SLCT 0x001f  
+#define ADVERTISE_CSMA 0x0001  
+#define ADVERTISE_10HALF 0x0020  
+#define ADVERTISE_1000XFULL 0x0020  
+#define ADVERTISE_10FULL 0x0040  
+#define ADVERTISE_1000XHALF 0x0040  
+#define ADVERTISE_100HALF 0x0080  
+#define ADVERTISE_1000XPAUSE 0x0080  
+#define ADVERTISE_100FULL 0x0100  
+#define ADVERTISE_1000XPSE_ASYM 0x0100  
+#define ADVERTISE_100BASE4 0x0200  
+#define ADVERTISE_PAUSE_CAP 0x0400  
+#define ADVERTISE_PAUSE_ASYM 0x0800  
+#define ADVERTISE_RESV 0x1000  
+#define ADVERTISE_RFAULT 0x2000  
+#define ADVERTISE_LPACK 0x4000  
+#define ADVERTISE_NPAGE 0x8000  
+
+#define ADVERTISE_FULL (ADVERTISE_100FULL | ADVERTISE_10FULL |   ADVERTISE_CSMA)
+#define ADVERTISE_ALL (ADVERTISE_10HALF | ADVERTISE_10FULL |   ADVERTISE_100HALF | ADVERTISE_100FULL)
+
+#define LPA_SLCT 0x001f  
+#define LPA_10HALF 0x0020  
+#define LPA_1000XFULL 0x0020  
+#define LPA_10FULL 0x0040  
+#define LPA_1000XHALF 0x0040  
+#define LPA_100HALF 0x0080  
+#define LPA_1000XPAUSE 0x0080  
+#define LPA_100FULL 0x0100  
+#define LPA_1000XPAUSE_ASYM 0x0100  
+#define LPA_100BASE4 0x0200  
+#define LPA_PAUSE_CAP 0x0400  
+#define LPA_PAUSE_ASYM 0x0800  
+#define LPA_RESV 0x1000  
+#define LPA_RFAULT 0x2000  
+#define LPA_LPACK 0x4000  
+#define LPA_NPAGE 0x8000  
+
+#define LPA_DUPLEX (LPA_10FULL | LPA_100FULL)
+#define LPA_100 (LPA_100FULL | LPA_100HALF | LPA_100BASE4)
+
+#define EXPANSION_NWAY 0x0001  
+#define EXPANSION_LCWP 0x0002  
+#define EXPANSION_ENABLENPAGE 0x0004  
+#define EXPANSION_NPCAPABLE 0x0008  
+#define EXPANSION_MFAULTS 0x0010  
+#define EXPANSION_RESV 0xffe0  
+
+#define ESTATUS_1000_TFULL 0x2000  
+#define ESTATUS_1000_THALF 0x1000  
+
+#define NWAYTEST_RESV1 0x00ff  
+#define NWAYTEST_LOOPBACK 0x0100  
+#define NWAYTEST_RESV2 0xfe00  
+
+#define ADVERTISE_1000FULL 0x0200  
+#define ADVERTISE_1000HALF 0x0100  
+
+#define LPA_1000LOCALRXOK 0x2000  
+#define LPA_1000REMRXOK 0x1000  
+#define LPA_1000FULL 0x0800  
+#define LPA_1000HALF 0x0400  
+
+#define FLOW_CTRL_TX 0x01
+#define FLOW_CTRL_RX 0x02
+
+struct mii_ioctl_data {
+ __u16 phy_id;
+ __u16 reg_num;
+ __u16 val_in;
+ __u16 val_out;
+};
+
+#endif
diff --git a/libc/kernel/common/linux/watchdog.h b/libc/kernel/common/linux/watchdog.h
new file mode 100644
index 0000000..398d5cd
--- /dev/null
+++ b/libc/kernel/common/linux/watchdog.h
@@ -0,0 +1,57 @@
+/****************************************************************************
+ ****************************************************************************
+ ***
+ ***   This header was automatically generated from a Linux kernel header
+ ***   of the same name, to make information necessary for userspace to
+ ***   call into the kernel available to libc.  It contains only constants,
+ ***   structures, and macros generated from the original header, and thus,
+ ***   contains no copyrightable information.
+ ***
+ ****************************************************************************
+ ****************************************************************************/
+#ifndef _LINUX_WATCHDOG_H
+#define _LINUX_WATCHDOG_H
+
+#include <linux/ioctl.h>
+#include <linux/types.h>
+
+#define WATCHDOG_IOCTL_BASE 'W'
+
+struct watchdog_info {
+ __u32 options;
+ __u32 firmware_version;
+ __u8 identity[32];
+};
+
+#define WDIOC_GETSUPPORT _IOR(WATCHDOG_IOCTL_BASE, 0, struct watchdog_info)
+#define WDIOC_GETSTATUS _IOR(WATCHDOG_IOCTL_BASE, 1, int)
+#define WDIOC_GETBOOTSTATUS _IOR(WATCHDOG_IOCTL_BASE, 2, int)
+#define WDIOC_GETTEMP _IOR(WATCHDOG_IOCTL_BASE, 3, int)
+#define WDIOC_SETOPTIONS _IOR(WATCHDOG_IOCTL_BASE, 4, int)
+#define WDIOC_KEEPALIVE _IOR(WATCHDOG_IOCTL_BASE, 5, int)
+#define WDIOC_SETTIMEOUT _IOWR(WATCHDOG_IOCTL_BASE, 6, int)
+#define WDIOC_GETTIMEOUT _IOR(WATCHDOG_IOCTL_BASE, 7, int)
+#define WDIOC_SETPRETIMEOUT _IOWR(WATCHDOG_IOCTL_BASE, 8, int)
+#define WDIOC_GETPRETIMEOUT _IOR(WATCHDOG_IOCTL_BASE, 9, int)
+#define WDIOC_GETTIMELEFT _IOR(WATCHDOG_IOCTL_BASE, 10, int)
+
+#define WDIOF_UNKNOWN -1  
+#define WDIOS_UNKNOWN -1  
+
+#define WDIOF_OVERHEAT 0x0001  
+#define WDIOF_FANFAULT 0x0002  
+#define WDIOF_EXTERN1 0x0004  
+#define WDIOF_EXTERN2 0x0008  
+#define WDIOF_POWERUNDER 0x0010  
+#define WDIOF_CARDRESET 0x0020  
+#define WDIOF_POWEROVER 0x0040  
+#define WDIOF_SETTIMEOUT 0x0080  
+#define WDIOF_MAGICCLOSE 0x0100  
+#define WDIOF_PRETIMEOUT 0x0200  
+#define WDIOF_KEEPALIVEPING 0x8000  
+
+#define WDIOS_DISABLECARD 0x0001  
+#define WDIOS_ENABLECARD 0x0002  
+#define WDIOS_TEMPPANIC 0x0004  
+
+#endif
diff --git a/libc/kernel/common/mtd/ubi-user.h b/libc/kernel/common/mtd/ubi-user.h
new file mode 100644
index 0000000..d57e80f
--- /dev/null
+++ b/libc/kernel/common/mtd/ubi-user.h
@@ -0,0 +1,126 @@
+/****************************************************************************
+ ****************************************************************************
+ ***
+ ***   This header was automatically generated from a Linux kernel header
+ ***   of the same name, to make information necessary for userspace to
+ ***   call into the kernel available to libc.  It contains only constants,
+ ***   structures, and macros generated from the original header, and thus,
+ ***   contains no copyrightable information.
+ ***
+ ****************************************************************************
+ ****************************************************************************/
+#ifndef __UBI_USER_H__
+#define __UBI_USER_H__
+
+#include <linux/types.h>
+
+#define UBI_VOL_NUM_AUTO (-1)
+#define UBI_DEV_NUM_AUTO (-1)
+
+#define UBI_MAX_VOLUME_NAME 127
+
+#define UBI_IOC_MAGIC 'o'
+
+#define UBI_IOCMKVOL _IOW(UBI_IOC_MAGIC, 0, struct ubi_mkvol_req)
+
+#define UBI_IOCRMVOL _IOW(UBI_IOC_MAGIC, 1, __s32)
+
+#define UBI_IOCRSVOL _IOW(UBI_IOC_MAGIC, 2, struct ubi_rsvol_req)
+
+#define UBI_IOCRNVOL _IOW(UBI_IOC_MAGIC, 3, struct ubi_rnvol_req)
+
+#define UBI_CTRL_IOC_MAGIC 'o'
+
+#define UBI_IOCATT _IOW(UBI_CTRL_IOC_MAGIC, 64, struct ubi_attach_req)
+
+#define UBI_IOCDET _IOW(UBI_CTRL_IOC_MAGIC, 65, __s32)
+
+#define UBI_VOL_IOC_MAGIC 'O'
+
+#define UBI_IOCVOLUP _IOW(UBI_VOL_IOC_MAGIC, 0, __s64)
+
+#define UBI_IOCEBER _IOW(UBI_VOL_IOC_MAGIC, 1, __s32)
+
+#define UBI_IOCEBCH _IOW(UBI_VOL_IOC_MAGIC, 2, __s32)
+
+#define UBI_IOCEBMAP _IOW(UBI_VOL_IOC_MAGIC, 3, struct ubi_map_req)
+
+#define UBI_IOCEBUNMAP _IOW(UBI_VOL_IOC_MAGIC, 4, __s32)
+
+#define UBI_IOCEBISMAP _IOR(UBI_VOL_IOC_MAGIC, 5, __s32)
+
+#define UBI_IOCSETPROP _IOW(UBI_VOL_IOC_MAGIC, 6, struct ubi_set_prop_req)
+
+#define MAX_UBI_MTD_NAME_LEN 127
+
+#define UBI_MAX_RNVOL 32
+
+enum {
+ UBI_LONGTERM = 1,
+ UBI_SHORTTERM = 2,
+ UBI_UNKNOWN = 3,
+};
+
+enum {
+ UBI_DYNAMIC_VOLUME = 3,
+ UBI_STATIC_VOLUME = 4,
+};
+
+enum {
+ UBI_PROP_DIRECT_WRITE = 1,
+};
+
+struct ubi_attach_req {
+ __s32 ubi_num;
+ __s32 mtd_num;
+ __s32 vid_hdr_offset;
+ __s8 padding[12];
+};
+
+struct ubi_mkvol_req {
+ __s32 vol_id;
+ __s32 alignment;
+ __s64 bytes;
+ __s8 vol_type;
+ __s8 padding1;
+ __s16 name_len;
+ __s8 padding2[4];
+ char name[UBI_MAX_VOLUME_NAME + 1];
+} __attribute__ ((packed));
+
+struct ubi_rsvol_req {
+ __s64 bytes;
+ __s32 vol_id;
+} __attribute__ ((packed));
+
+struct ubi_rnvol_req {
+ __s32 count;
+ __s8 padding1[12];
+ struct {
+ __s32 vol_id;
+ __s16 name_len;
+ __s8 padding2[2];
+ char name[UBI_MAX_VOLUME_NAME + 1];
+ } ents[UBI_MAX_RNVOL];
+} __attribute__ ((packed));
+
+struct ubi_leb_change_req {
+ __s32 lnum;
+ __s32 bytes;
+ __s8 dtype;
+ __s8 padding[7];
+} __attribute__ ((packed));
+
+struct ubi_map_req {
+ __s32 lnum;
+ __s8 dtype;
+ __s8 padding[3];
+} __attribute__ ((packed));
+
+struct ubi_set_prop_req {
+ __u8 property;
+ __u8 padding[7];
+ __u64 value;
+} __attribute__ ((packed));
+
+#endif
diff --git a/libc/kernel/common/scsi/scsi.h b/libc/kernel/common/scsi/scsi.h
new file mode 100644
index 0000000..d79f672
--- /dev/null
+++ b/libc/kernel/common/scsi/scsi.h
@@ -0,0 +1,175 @@
+/****************************************************************************
+ ****************************************************************************
+ ***
+ ***   This header was automatically generated from a Linux kernel header
+ ***   of the same name, to make information necessary for userspace to
+ ***   call into the kernel available to libc.  It contains only constants,
+ ***   structures, and macros generated from the original header, and thus,
+ ***   contains no copyrightable information.
+ ***
+ ****************************************************************************
+ ****************************************************************************/
+#ifndef _SCSI_SCSI_H
+#define _SCSI_SCSI_H 1
+
+#include <features.h>
+
+#define TEST_UNIT_READY 0x00
+#define REZERO_UNIT 0x01
+#define REQUEST_SENSE 0x03
+#define FORMAT_UNIT 0x04
+#define READ_BLOCK_LIMITS 0x05
+#define REASSIGN_BLOCKS 0x07
+#define READ_6 0x08
+#define WRITE_6 0x0a
+#define SEEK_6 0x0b
+#define READ_REVERSE 0x0f
+#define WRITE_FILEMARKS 0x10
+#define SPACE 0x11
+#define INQUIRY 0x12
+#define RECOVER_BUFFERED_DATA 0x14
+#define MODE_SELECT 0x15
+#define RESERVE 0x16
+#define RELEASE 0x17
+#define COPY 0x18
+#define ERASE 0x19
+#define MODE_SENSE 0x1a
+#define START_STOP 0x1b
+#define RECEIVE_DIAGNOSTIC 0x1c
+#define SEND_DIAGNOSTIC 0x1d
+#define ALLOW_MEDIUM_REMOVAL 0x1e
+
+#define SET_WINDOW 0x24
+#define READ_CAPACITY 0x25
+#define READ_10 0x28
+#define WRITE_10 0x2a
+#define SEEK_10 0x2b
+#define WRITE_VERIFY 0x2e
+#define VERIFY 0x2f
+#define SEARCH_HIGH 0x30
+#define SEARCH_EQUAL 0x31
+#define SEARCH_LOW 0x32
+#define SET_LIMITS 0x33
+#define PRE_FETCH 0x34
+#define READ_POSITION 0x34
+#define SYNCHRONIZE_CACHE 0x35
+#define LOCK_UNLOCK_CACHE 0x36
+#define READ_DEFECT_DATA 0x37
+#define MEDIUM_SCAN 0x38
+#define COMPARE 0x39
+#define COPY_VERIFY 0x3a
+#define WRITE_BUFFER 0x3b
+#define READ_BUFFER 0x3c
+#define UPDATE_BLOCK 0x3d
+#define READ_LONG 0x3e
+#define WRITE_LONG 0x3f
+#define CHANGE_DEFINITION 0x40
+#define WRITE_SAME 0x41
+#define READ_TOC 0x43
+#define LOG_SELECT 0x4c
+#define LOG_SENSE 0x4d
+#define MODE_SELECT_10 0x55
+#define RESERVE_10 0x56
+#define RELEASE_10 0x57
+#define MODE_SENSE_10 0x5a
+#define PERSISTENT_RESERVE_IN 0x5e
+#define PERSISTENT_RESERVE_OUT 0x5f
+#define MOVE_MEDIUM 0xa5
+#define READ_12 0xa8
+#define WRITE_12 0xaa
+#define WRITE_VERIFY_12 0xae
+#define SEARCH_HIGH_12 0xb0
+#define SEARCH_EQUAL_12 0xb1
+#define SEARCH_LOW_12 0xb2
+#define READ_ELEMENT_STATUS 0xb8
+#define SEND_VOLUME_TAG 0xb6
+#define WRITE_LONG_2 0xea
+
+#define GOOD 0x00
+#define CHECK_CONDITION 0x01
+#define CONDITION_GOOD 0x02
+#define BUSY 0x04
+#define INTERMEDIATE_GOOD 0x08
+#define INTERMEDIATE_C_GOOD 0x0a
+#define RESERVATION_CONFLICT 0x0c
+#define COMMAND_TERMINATED 0x11
+#define QUEUE_FULL 0x14
+
+#define STATUS_MASK 0x3e
+
+#define NO_SENSE 0x00
+#define RECOVERED_ERROR 0x01
+#define NOT_READY 0x02
+#define MEDIUM_ERROR 0x03
+#define HARDWARE_ERROR 0x04
+#define ILLEGAL_REQUEST 0x05
+#define UNIT_ATTENTION 0x06
+#define DATA_PROTECT 0x07
+#define BLANK_CHECK 0x08
+#define COPY_ABORTED 0x0a
+#define ABORTED_COMMAND 0x0b
+#define VOLUME_OVERFLOW 0x0d
+#define MISCOMPARE 0x0e
+
+#define TYPE_DISK 0x00
+#define TYPE_TAPE 0x01
+#define TYPE_PROCESSOR 0x03  
+#define TYPE_WORM 0x04  
+#define TYPE_ROM 0x05
+#define TYPE_SCANNER 0x06
+#define TYPE_MOD 0x07  
+#define TYPE_MEDIUM_CHANGER 0x08
+#define TYPE_ENCLOSURE 0x0d  
+#define TYPE_NO_LUN 0x7f
+
+struct ccs_modesel_head
+ {
+ unsigned char _r1;
+ unsigned char medium;
+ unsigned char _r2;
+ unsigned char block_desc_length;
+ unsigned char density;
+ unsigned char number_blocks_hi;
+ unsigned char number_blocks_med;
+ unsigned char number_blocks_lo;
+ unsigned char _r3;
+ unsigned char block_length_hi;
+ unsigned char block_length_med;
+ unsigned char block_length_lo;
+ };
+
+#define COMMAND_COMPLETE 0x00
+#define EXTENDED_MESSAGE 0x01
+#define EXTENDED_MODIFY_DATA_POINTER 0x00
+#define EXTENDED_SDTR 0x01
+#define EXTENDED_EXTENDED_IDENTIFY 0x02  
+#define EXTENDED_WDTR 0x03
+#define SAVE_POINTERS 0x02
+#define RESTORE_POINTERS 0x03
+#define DISCONNECT 0x04
+#define INITIATOR_ERROR 0x05
+#define ABORT 0x06
+#define MESSAGE_REJECT 0x07
+#define NOP 0x08
+#define MSG_PARITY_ERROR 0x09
+#define LINKED_CMD_COMPLETE 0x0a
+#define LINKED_FLG_CMD_COMPLETE 0x0b
+#define BUS_DEVICE_RESET 0x0c
+
+#define INITIATE_RECOVERY 0x0f  
+#define RELEASE_RECOVERY 0x10  
+
+#define SIMPLE_QUEUE_TAG 0x20
+#define HEAD_OF_QUEUE_TAG 0x21
+#define ORDERED_QUEUE_TAG 0x22
+
+#define SCSI_IOCTL_GET_IDLUN 0x5382
+
+#define SCSI_IOCTL_TAGGED_ENABLE 0x5383
+#define SCSI_IOCTL_TAGGED_DISABLE 0x5384
+
+#define SCSI_IOCTL_PROBE_HOST 0x5385
+
+#define SCSI_IOCTL_GET_BUS_NUMBER 0x5386
+
+#endif
diff --git a/libc/kernel/common/scsi/sg.h b/libc/kernel/common/scsi/sg.h
new file mode 100644
index 0000000..aea6ec1
--- /dev/null
+++ b/libc/kernel/common/scsi/sg.h
@@ -0,0 +1,191 @@
+/****************************************************************************
+ ****************************************************************************
+ ***
+ ***   This header was automatically generated from a Linux kernel header
+ ***   of the same name, to make information necessary for userspace to
+ ***   call into the kernel available to libc.  It contains only constants,
+ ***   structures, and macros generated from the original header, and thus,
+ ***   contains no copyrightable information.
+ ***
+ ****************************************************************************
+ ****************************************************************************/
+#ifndef _SCSI_SG_H
+#define _SCSI_SG_H 1
+
+#include <features.h>
+
+typedef struct sg_iovec
+{
+ void * iov_base;
+ size_t iov_len;
+} sg_iovec_t;
+
+typedef struct sg_io_hdr
+{
+ int interface_id;
+ int dxfer_direction;
+ unsigned char cmd_len;
+ unsigned char mx_sb_len;
+ unsigned short int iovec_count;
+ unsigned int dxfer_len;
+ void * dxferp;
+ unsigned char * cmdp;
+ unsigned char * sbp;
+ unsigned int timeout;
+ unsigned int flags;
+ int pack_id;
+ void * usr_ptr;
+ unsigned char status;
+ unsigned char masked_status;
+ unsigned char msg_status;
+ unsigned char sb_len_wr;
+ unsigned short int host_status;
+ unsigned short int driver_status;
+ int resid;
+ unsigned int duration;
+ unsigned int info;
+} sg_io_hdr_t;
+
+#define SG_DXFER_NONE -1  
+#define SG_DXFER_TO_DEV -2  
+#define SG_DXFER_FROM_DEV -3  
+#define SG_DXFER_TO_FROM_DEV -4  
+
+#define SG_FLAG_DIRECT_IO 1  
+#define SG_FLAG_LUN_INHIBIT 2  
+
+#define SG_FLAG_NO_DXFER 0x10000  
+
+#define SG_INFO_OK_MASK 0x1
+#define SG_INFO_OK 0x0  
+#define SG_INFO_CHECK 0x1  
+
+#define SG_INFO_DIRECT_IO_MASK 0x6
+#define SG_INFO_INDIRECT_IO 0x0  
+#define SG_INFO_DIRECT_IO 0x2  
+#define SG_INFO_MIXED_IO 0x4  
+
+struct sg_scsi_id {
+
+ int host_no;
+ int channel;
+
+ int scsi_id;
+ int lun;
+
+ int scsi_type;
+
+ short int h_cmd_per_lun;
+
+ short int d_queue_depth;
+
+ int unused[2];
+};
+
+typedef struct sg_req_info {
+ char req_state;
+ char orphan;
+ char sg_io_owned;
+ char problem;
+ int pack_id;
+ void * usr_ptr;
+ unsigned int duration;
+ int unused;
+} sg_req_info_t;
+
+#define SG_EMULATED_HOST 0x2203  
+
+#define SG_SET_TRANSFORM 0x2204  
+
+#define SG_GET_TRANSFORM 0x2205
+
+#define SG_SET_RESERVED_SIZE 0x2275  
+#define SG_GET_RESERVED_SIZE 0x2272  
+
+#define SG_GET_SCSI_ID 0x2276  
+
+#define SG_SET_FORCE_LOW_DMA 0x2279  
+#define SG_GET_LOW_DMA 0x227a  
+
+#define SG_SET_FORCE_PACK_ID 0x227b
+#define SG_GET_PACK_ID 0x227c  
+
+#define SG_GET_NUM_WAITING 0x227d  
+
+#define SG_GET_SG_TABLESIZE 0x227F  
+
+#define SG_GET_VERSION_NUM 0x2282  
+
+#define SG_SCSI_RESET 0x2284
+
+#define SG_SCSI_RESET_NOTHING 0
+#define SG_SCSI_RESET_DEVICE 1
+#define SG_SCSI_RESET_BUS 2
+#define SG_SCSI_RESET_HOST 3
+
+#define SG_IO 0x2285  
+
+#define SG_GET_REQUEST_TABLE 0x2286  
+
+#define SG_SET_KEEP_ORPHAN 0x2287  
+#define SG_GET_KEEP_ORPHAN 0x2288
+
+#define SG_SCATTER_SZ (8 * 4096)  
+
+#define SG_DEFAULT_RETRIES 1
+
+#define SG_DEF_FORCE_LOW_DMA 0  
+#define SG_DEF_FORCE_PACK_ID 0
+#define SG_DEF_KEEP_ORPHAN 0
+#define SG_DEF_RESERVED_SIZE SG_SCATTER_SZ  
+
+#define SG_MAX_QUEUE 16
+
+#define SG_BIG_BUFF SG_DEF_RESERVED_SIZE  
+
+typedef struct sg_io_hdr Sg_io_hdr;
+typedef struct sg_io_vec Sg_io_vec;
+typedef struct sg_scsi_id Sg_scsi_id;
+typedef struct sg_req_info Sg_req_info;
+
+#define SG_MAX_SENSE 16  
+
+struct sg_header
+ {
+
+ int pack_len;
+
+ int reply_len;
+
+ int pack_id;
+
+ int result;
+
+ unsigned int twelve_byte:1;
+
+ unsigned int target_status:5;
+
+ unsigned int host_status:8;
+
+ unsigned int driver_status:8;
+
+ unsigned int other_flags:10;
+
+ unsigned char sense_buffer[SG_MAX_SENSE];
+ };
+
+#define SG_SET_TIMEOUT 0x2201  
+#define SG_GET_TIMEOUT 0x2202  
+
+#define SG_GET_COMMAND_Q 0x2270  
+#define SG_SET_COMMAND_Q 0x2271  
+
+#define SG_SET_DEBUG 0x227e  
+
+#define SG_NEXT_CMD_LEN 0x2283  
+
+#define SG_DEFAULT_TIMEOUT (60*HZ)  
+#define SG_DEF_COMMAND_Q 0  
+#define SG_DEF_UNDERRUN_FLAG 0
+
+#endif
